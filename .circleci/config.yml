version: 2.1
jobs:
    build_and_test:
        working_directory: ~/app
        docker:
            - image: vdtn359/news-ci
        steps:
            - checkout
            - restore_cache:
                  key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
            - run:
                  name: Install node_modules
                  command: |
                      npm set verify-store-integrity false
                      pnpm recursive install --unsafe-perm
            - save_cache:
                  key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
                  paths:
                      - ~/.pnpm-store
            - restore_cache:
                  key: next-cache
            - run:
                  name: Build
                  command: pnpm run cli -- build
            - save_cache:
                  key: next-cache
                  paths:
                      - app/web/.next/cache
            - run:
                  name: Test
                  command: npx jest
    release:
        working_directory: ~/app
        docker:
            - image: vdtn359/news-ci
        steps:
            - checkout
            - run:
                  name: Authenticate with registry
                  command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
            - restore_cache:
                  key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
            - run:
                  name: Install node_modules
                  command: |
                      npm set verify-store-integrity false
                      npm config set access public
                      echo "$WEB_SECRET" | base64 --decode > app/web/.env
                      pnpm recursive install --unsafe-perm
            - run:
                  name: Release
                  command: pnpm recursive exec --sort --workspace-concurrency=1 --filter ./app --filter ./packages -- npx semantic-release
            - run:
                  name: Deploy crawler
                  command: make provisionCrawler
            - run:
                  name: Deploy scheduler
                  command: make provisionScheduler
            - restore_cache:
                  key: next-cache
            - run:
                  name: Build web
                  command: cd app/web && npm run build
            - run:
                  name: Build worker
                  command: cd app/worker && npm run build
            - persist_to_workspace:
                  root: ~/app
                  paths:
                      - app/web/produles
                      - app/web/.next
                      - app/worker/produles
                      - app/worker/dist
    deploy_containers:
        working_directory: ~/app
        machine: true
        steps:
            - checkout
            - attach_workspace:
                  at: ~/app
            - run:
                  name: Prepare credentails
                  command: |
                      echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
                      curl https://cli-assets.heroku.com/install.sh | sh
                      heroku container:login
            - run:
                  name: Deploy worker
                  command: make buildWorker releaseWorker
            - run:
                  name: Deploy web
                  command: make buildWeb releaseWeb
workflows:
    version: 2
    build_and_test:
        jobs:
            - build_and_test
            - release:
                  requires:
                      - build_and_test
                  filters:
                      branches:
                          only:
                              - master
            - deploy_containers:
                  requires:
                      - release
                  filters:
                      branches:
                          only:
                              - master
